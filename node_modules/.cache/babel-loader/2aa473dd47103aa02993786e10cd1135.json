{"ast":null,"code":"var _jsxFileName = \"/home/bill/Bureau/sol/Bataille-Navale/src/Components/Register.js\";\nimport React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport { withSessionContext } from \"../Utils/SessionProvider\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      event.preventDefault();\n      const target = event.target; //const value = target.name === 'nom' ? target.checked : target.value;\n\n      const value = target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.submitAction = async event => {\n      event.preventDefault();\n      const myHistory = this.props.history;\n      const validEmailRegex = // eslint-disable-next-line no-useless-escape\n      RegExp(/^(([^<>()\\[\\].,;:\\s@\"]+(\\.[^<>()\\[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i);\n      const {\n        nom,\n        prenom,\n        email,\n        password,\n        confirmPassword\n      } = this.state;\n      let isError = false;\n      await this.setState(prevState => {\n        return {\n          errors: prevState.errors.map(item => {\n            item.nom[0].isActive = nom.trim() === \"\";\n            item.nom[1].isActive = nom.length < 4;\n            item.nom.forEach(value => {\n              if (value.isActive) isError = true;\n            });\n            item.prenom[0].isActive = prenom.trim() === \"\";\n            item.prenom[1].isActive = prenom.length < 4;\n            item.prenom.forEach(value => {\n              if (value.isActive) isError = true;\n            });\n            item.email[0].isActive = email.trim() === \"\";\n            item.email[1].isActive = !validEmailRegex.test(email);\n            item.email[2].isActive = false;\n            item.email.forEach(value => {\n              if (value.isActive) isError = true;\n            });\n            item.password[0].isActive = password.trim() === \"\";\n            item.password[1].isActive = password.length < 8;\n            item.password.forEach(value => {\n              if (value.isActive) isError = true;\n            });\n            item.confirmPassword[0].isActive = confirmPassword.trim() === \"\";\n            item.confirmPassword[1].isActive = confirmPassword.trim() !== password.trim() && confirmPassword.trim() !== \"\";\n            item.confirmPassword.forEach(value => {\n              if (value.isActive) isError = true;\n            });\n            item.internalError[0].isActive = false;\n            return item;\n          })\n        };\n      });\n\n      if (!isError) {\n        await Axios.post('http://localhost:8000/api/register', {\n          nom,\n          prenom,\n          email,\n          password\n        }).then(res => {\n          //reponse ok crée utilisateur et rédirige vers login\n          if (res.status === 201) {\n            return myHistory.push(\"/login\", {\n              regSucc: true\n            });\n          }\n        }).catch(async res => {\n          /*\n          * Erreur La réquête est passée mais l'email existe déjà\n          *  Status = 409\n          */\n          if (res.response && res.response.status === 409) return this.setState(async prevState => {\n            return {\n              errors: await prevState.errors.map(value => value.email[2].isActive = true)\n            };\n          });\n          /*\n          * Erreur interne La réquête n'est pas passée\n          *  Status = 400 ou 304\n          */\n\n          this.setState(async prevState => {\n            return {\n              errors: await prevState.errors.map(value => value.internalError[0].isActive = true)\n            };\n          });\n        });\n      }\n    };\n\n    this.state = {\n      nom: \"\",\n      prenom: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: [{\n        nom: [{\n          isActive: false,\n          type: 'nomNotBlank',\n          message: 'Le nom ne doit pas être vide.'\n        }, {\n          isActive: false,\n          type: 'nomMin',\n          message: 'Ce champ ne peut être inférieur à 4.'\n        }],\n        prenom: [{\n          isActive: false,\n          type: 'prenomNotBlank',\n          message: 'Le prénom ne doit pas être vide.'\n        }, {\n          isActive: false,\n          type: 'prenomMin',\n          message: 'Ce champ ne peut être inférieur à 4.'\n        }],\n        email: [{\n          isActive: false,\n          type: 'emailNotBlank',\n          message: 'L\\'email ne doit pas être vide.'\n        }, {\n          isActive: false,\n          type: 'emailValid',\n          message: 'L\\'email n\\'est pas valide.'\n        }, {\n          isActive: false,\n          type: 'emailExist',\n          message: 'L\\'email existe déjà.'\n        }],\n        password: [{\n          isActive: false,\n          type: 'passNotBlank',\n          message: 'Le mot de passe ne doit pas être vide.'\n        }, {\n          isActive: false,\n          type: 'passMin',\n          message: 'Ce champ ne peut être inférieur à 8.'\n        }],\n        confirmPassword: [{\n          isActive: false,\n          type: 'passConfNotBlank',\n          message: 'Cette valeur ne doit pas être vide.'\n        }, {\n          isActive: false,\n          type: 'passConfValidConfirm',\n          message: 'Les mots de passes ne sont pas identiques.'\n        }],\n        internalError: [{\n          isActive: false,\n          type: 'internError',\n          message: 'Erreur interne du serveur. Contactez l\\'administrateur. '\n        }]\n      }]\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  render() {\n    const {\n      nom,\n      prenom,\n      email,\n      password,\n      confirmPassword,\n      errors\n    } = this.state;\n    console.log(this.props.context.isLogged);\n\n    if (this.props.context.isLogged) {\n      return \"\";\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-4 mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Inscription\"), errors[0].internalError[0].isActive && React.createElement(\"div\", {\n      key: 0,\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, errors[0].internalError[0].message), React.createElement(\"form\", {\n      className: \"form-group\",\n      onSubmit: this.submitAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"nom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Nom\"), React.createElement(\"input\", {\n      required: true,\n      name: \"nom\",\n      type: \"text\",\n      className: \"form-control\",\n      value: nom,\n      onChange: this.handleInputChange,\n      id: \"nom\",\n      \"aria-describedby\": \"nomHelp\",\n      placeholder: \"Entrer votre nom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), errors[0].nom.map((item, index) => {\n      if (item.isActive) return React.createElement(\"p\", {\n        key: index,\n        className: \"alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, item.message);\n      return '';\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"prenom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Pr\\xE9nom\"), React.createElement(\"input\", {\n      required: true,\n      name: \"prenom\",\n      type: \"text\",\n      className: \"form-control\",\n      value: prenom,\n      onChange: this.handleInputChange,\n      id: \"prenom\",\n      \"aria-describedby\": \"prenomHelp\",\n      placeholder: \"Entrer votre pr\\xE9nom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), errors[0].prenom.map((item, index) => {\n      if (item.isActive) return React.createElement(\"p\", {\n        key: index,\n        className: \"alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, item.message);\n      return '';\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      required: true,\n      name: \"email\",\n      type: \"email\",\n      className: \"form-control\",\n      id: \"email\",\n      value: email,\n      onChange: this.handleInputChange,\n      \"aria-describedby\": \"emailHelp\",\n      placeholder: \"Entrer votre Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), errors[0].email.map((item, index) => {\n      if (item.isActive) return React.createElement(\"p\", {\n        key: index,\n        className: \"alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, item.message);\n      return '';\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      required: true,\n      name: \"password\",\n      type: \"password\",\n      className: \"form-control\",\n      onChange: this.handleInputChange,\n      value: password,\n      id: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), errors[0].password.map((item, index) => {\n      if (item.isActive) return React.createElement(\"p\", {\n        key: index,\n        className: \"alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, item.message);\n      return '';\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"confirmPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Confirm Password\"), React.createElement(\"input\", {\n      placeholder: \"Confirm Password\",\n      required: true,\n      className: \"form-control\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleInputChange,\n      id: \"confirmPassword\",\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), errors[0].confirmPassword.map((item, index) => {\n      if (item.isActive) return React.createElement(\"p\", {\n        key: index,\n        className: \"alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, item.message);\n      return '';\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Enregistrer\")))));\n  }\n\n}\n\nexport default withRouter(withSessionContext(Register));","map":{"version":3,"sources":["/home/bill/Bureau/sol/Bataille-Navale/src/Components/Register.js"],"names":["React","Component","Axios","withRouter","withSessionContext","Register","constructor","props","handleInputChange","event","preventDefault","target","value","name","setState","submitAction","myHistory","history","validEmailRegex","RegExp","nom","prenom","email","password","confirmPassword","state","isError","prevState","errors","map","item","isActive","trim","length","forEach","test","internalError","post","then","res","status","push","regSucc","catch","response","type","message","bind","render","console","log","context","isLogged","index"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport Axios from \"axios\";\nimport {withRouter} from \"react-router-dom\";\nimport {withSessionContext} from \"../Utils/SessionProvider\";\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nom: \"\", prenom: \"\", email: \"\", password: \"\", confirmPassword: \"\",\n            errors: [{\n                nom: [\n                    {isActive: false, type: 'nomNotBlank', message: 'Le nom ne doit pas être vide.'},\n                    {isActive: false, type: 'nomMin', message: 'Ce champ ne peut être inférieur à 4.'}\n                ],\n                prenom: [\n                    {isActive: false, type: 'prenomNotBlank', message: 'Le prénom ne doit pas être vide.'},\n                    {isActive: false, type: 'prenomMin', message: 'Ce champ ne peut être inférieur à 4.'}\n                ], email: [\n                    {isActive: false, type: 'emailNotBlank', message: 'L\\'email ne doit pas être vide.'},\n                    {isActive: false, type: 'emailValid', message: 'L\\'email n\\'est pas valide.'},\n                    {isActive: false, type: 'emailExist', message: 'L\\'email existe déjà.'}\n                ],\n                password: [\n                    {isActive: false, type: 'passNotBlank', message: 'Le mot de passe ne doit pas être vide.'},\n                    {isActive: false, type: 'passMin', message: 'Ce champ ne peut être inférieur à 8.'}\n                ],\n                confirmPassword: [\n                    {isActive: false, type: 'passConfNotBlank', message: 'Cette valeur ne doit pas être vide.'},\n                    {\n                        isActive: false,\n                        type: 'passConfValidConfirm',\n                        message: 'Les mots de passes ne sont pas identiques.'\n                    }\n                ],\n                internalError: [\n                    {\n                        isActive: false,\n                        type: 'internError',\n                        message: 'Erreur interne du serveur. Contactez l\\'administrateur. '\n                    },\n                ]\n            }]\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n    };\n\n    handleInputChange = (event) => {\n        event.preventDefault();\n        const target = event.target;\n        //const value = target.name === 'nom' ? target.checked : target.value;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    };\n    submitAction = async (event) => {\n        event.preventDefault();\n        const myHistory = this.props.history;\n        const validEmailRegex =\n            // eslint-disable-next-line no-useless-escape\n            RegExp(/^(([^<>()\\[\\].,;:\\s@\"]+(\\.[^<>()\\[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i);\n\n        const {nom, prenom, email, password, confirmPassword} = this.state;\n        let isError = false;\n        await this.setState(prevState => {\n            return (\n                {\n                    errors: prevState.errors.map(\n                        item => {\n                            item.nom[0].isActive = nom.trim() === \"\";\n                            item.nom[1].isActive = nom.length < 4;\n                            item.nom.forEach(value => {\n                                if (value.isActive) isError = true\n                            });\n                            item.prenom[0].isActive = prenom.trim() === \"\";\n                            item.prenom[1].isActive = prenom.length < 4;\n                            item.prenom.forEach(value => {\n                                if (value.isActive) isError = true\n                            });\n                            item.email[0].isActive = email.trim() === \"\";\n                            item.email[1].isActive = !validEmailRegex.test(email);\n                            item.email[2].isActive = false;\n                            item.email.forEach(value => {\n                                if (value.isActive) isError = true\n                            });\n                            item.password[0].isActive = password.trim() === \"\";\n                            item.password[1].isActive = password.length < 8;\n                            item.password.forEach(value => {\n                                if (value.isActive) isError = true\n                            });\n                            item.confirmPassword[0].isActive = confirmPassword.trim() === \"\";\n                            item.confirmPassword[1].isActive = confirmPassword.trim() !== password.trim() && confirmPassword.trim() !== \"\";\n                            item.confirmPassword.forEach(value => {\n                                if (value.isActive) isError = true\n                            });\n                            item.internalError[0].isActive = false;\n                            return item\n                        }\n                    )\n                }\n            );\n        });\n        if (!isError) {\n            await Axios.post('http://localhost:8000/api/register', {\n                nom,\n                prenom,\n                email,\n                password\n            }).then(res => {\n                //reponse ok crée utilisateur et rédirige vers login\n                if (res.status === 201) {\n                    return myHistory.push(\"/login\",{regSucc:true});\n                }\n            }).catch(async (res) => {\n                /*\n                * Erreur La réquête est passée mais l'email existe déjà\n                *  Status = 409\n                */\n                if (res.response && res.response.status === 409)\n                    return this.setState(async (prevState) => {\n                        return (\n                            {\n                                errors: await prevState.errors.map(value => value.email[2].isActive = true)\n                            }\n                        );\n                    });\n                /*\n                * Erreur interne La réquête n'est pas passée\n                *  Status = 400 ou 304\n                */\n                this.setState(async (prevState) => {\n                    return (\n                        {\n                            errors: await prevState.errors.map(value => value.internalError[0].isActive = true)\n                        }\n                    );\n                });\n            });\n        }\n\n    };\n\n    render() {\n        const {nom, prenom, email, password, confirmPassword, errors} = this.state;\n        console.log(this.props.context.isLogged);\n        if (this.props.context.isLogged){\n            return \"\"\n        }\n        return (\n            < div className=\"container\">\n                < div className=\"row\">\n                    < div className=\"col-md-4 mx-auto\">\n                        <h1>Inscription</h1>\n                        {errors[0].internalError[0].isActive &&\n                        <div key={0} className=\"alert alert-danger\">{errors[0].internalError[0].message}</div>\n\n                        }\n                        <form className=\"form-group\" onSubmit={this.submitAction}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"nom\">Nom</label>\n                                <input required name=\"nom\" type=\"text\" className=\"form-control\"\n                                       value={nom} onChange={this.handleInputChange}\n                                       id=\"nom\" aria-describedby=\"nomHelp\" placeholder=\"Entrer votre nom\"/>\n                                {errors[0].nom.map((item, index) => {\n                                    if (item.isActive)\n                                        return <p key={index} className=\"alert-danger\">{item.message}</p>;\n                                    return ''\n                                })}\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"prenom\">Prénom</label>\n                                <input required name=\"prenom\" type=\"text\" className=\"form-control\"\n                                       value={prenom} onChange={this.handleInputChange}\n                                       id=\"prenom\" aria-describedby=\"prenomHelp\" placeholder=\"Entrer votre prénom\"/>\n                                {errors[0].prenom.map((item, index) => {\n                                    if (item.isActive)\n                                        return <p key={index} className=\"alert-danger\">{item.message}</p>;\n                                    return ''\n                                })}\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"email\">Email</label>\n                                <input required name=\"email\" type=\"email\" className=\"form-control\" id=\"email\"\n                                       value={email} onChange={this.handleInputChange}\n                                       aria-describedby=\"emailHelp\" placeholder=\"Entrer votre Email\"/>\n                                {errors[0].email.map((item, index) => {\n                                    if (item.isActive)\n                                        return <p key={index} className=\"alert-danger\">{item.message}</p>;\n                                    return ''\n                                })}\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"password\">Password</label>\n                                <input required name=\"password\" type=\"password\" className=\"form-control\"\n                                       onChange={this.handleInputChange}\n                                       value={password} id=\"password\" placeholder=\"Password\"/>\n                                {errors[0].password.map((item, index) => {\n                                    if (item.isActive)\n                                        return <p key={index} className=\"alert-danger\">{item.message}</p>;\n                                    return ''\n                                })}\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                                <input placeholder=\"Confirm Password\" required className=\"form-control\"\n                                       name=\"confirmPassword\" value={confirmPassword} onChange={this.handleInputChange}\n                                       id=\"confirmPassword\" type=\"password\"/>\n                                {errors[0].confirmPassword.map((item, index) => {\n                                    if (item.isActive)\n                                        return <p key={index} className=\"alert-danger\">{item.message}</p>;\n                                    return ''\n                                })}\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-success\">Enregistrer</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default withRouter(withSessionContext(Register));"]},"metadata":{},"sourceType":"module"}